<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Consultar Pacientes</title>
  <!-- Agrega el enlace al archivo CSS de Bootstrap -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/styles.css">
</head>

<body>
  <div class="container">
    <h1 class="mt-5">Consultar Pacientes</h1>

    <!-- Tabla para mostrar la lista de pacientes -->
    <table class="table table-striped mt-4">
      <thead>
        <tr>
          <th>Nombre</th>
          <th>Apellido</th>
          <th>Cédula</th>
          <th>Edad</th>
          <th>Teléfono</th>
          <th>Acciones</th>
        </tr>
      </thead>
      <tbody id="patientTableBody">
        <!-- Patient records will be dynamically loaded here -->
      </tbody>
    </table>

    <a href="/crear-paciente" class="btn btn-primary">Crear Nuevo Paciente</a>
    <a href="/" class="btn btn-secondary">Volver al Inicio</a>
  </div>

  <!-- Agrega el enlace al archivo JS de Bootstrap -->
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

  <!-- Script to fetch and populate the table of patients -->
  <script>
    // Function to fetch and populate the table of patients
async function populatePatients() {
  try {
    const response = await fetch('/patients');
    const patients = await response.json();

    const patientTableBody = document.getElementById('patientTableBody');

    patients.forEach(patient => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${patient.name}</td>
        <td>${patient.lastName}</td>
        <td>${patient.cedula}</td>
        <td>${patient.age}</td>
        <td>${patient.phone}</td>
        <td>
          <a href="/editar-paciente/${patient._id}" class="btn btn-primary btn-sm">Editar</a>
          <button onclick="deletePatient('${patient._id}')" class="btn btn-danger btn-sm">Eliminar</button>
        </td>
      `;
      patientTableBody.appendChild(row);
    });
  } catch (error) {
    console.error('Error fetching patients:', error);
  }
}


    // Function to delete a patient
    async function deletePatient(patientId) {
      if (confirm('¿Estás seguro de eliminar este paciente?')) {
        try {
          await fetch(`/patients/${patientId}`, { method: 'DELETE' });
          location.reload(); // Refresh the page after deleting the patient
        } catch (error) {
          console.error('Error deleting patient:', error);
        }
      }
    }

    // Call the function to populate patients when the page is loaded
    document.addEventListener('DOMContentLoaded', populatePatients);
  </script>
</body>

</html>
